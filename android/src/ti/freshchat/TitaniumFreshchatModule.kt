/**
 * This file was auto-generated by the Titanium Module SDK helper for Android
 * TiDev Titanium Mobile
 * Copyright TiDev, Inc. 04/07/2022-Present
 * Licensed under the terms of the Apache Public License
 * Please see the LICENSE included with this distribution for details.
 *
 */

package ti.freshchat

import com.freshchat.consumer.sdk.Freshchat
import com.freshchat.consumer.sdk.FreshchatConfig
import org.appcelerator.kroll.KrollDict
import org.appcelerator.kroll.KrollModule
import org.appcelerator.kroll.annotations.Kroll
import org.appcelerator.titanium.TiApplication

@Kroll.module(name = "TitaniumFreshchat", id = "ti.freshchat")
class TitaniumFreshchatModule: KrollModule() {

	private fun instance(): Freshchat {
		return Freshchat.getInstance(TiApplication.getInstance())
	}

	@Kroll.method
	fun initialize(params: KrollDict) {
		val appId = params.getString("appId")
		val appKey = params.getString("appKey")
		val config = FreshchatConfig(appId, appKey)

		params.getString("domain")?.let {
			config.domain = it
		}

		instance().init(config)
	}

	@Kroll.method
	fun identifyUser(externalId: String) {
		instance().identifyUser(externalId, null)
	}

	@Kroll.method
	fun signInUser(params: KrollDict) {
		val firstName = params.getString("firstName")
		val lastName = params.getString("lastName")
		val email = params.getString("email")

		firstName?.let {
			instance().user.firstName = it
		}

		lastName.let {
			instance().user.lastName = it
		}

		email.let {
			instance().user.email = it
		}

		instance().user = instance().user
	}

	@Kroll.method
	fun updateUserProperty(key: String, value: String) {
		instance().setUserProperty(key, value)
	}

	@Kroll.method
	fun signOutUser() {
		Freshchat.resetUser(TiApplication.getInstance());
	}

	@Kroll.method
	fun trackEvent(eventName: String, parameters: KrollDict?) {
		Freshchat.trackEvent(TiApplication.getInstance(), eventName, properties)
	}

	@Kroll.method
	fun showConversations() {
		Freshchat.showConversations(TiApplication.getInstance());
	}

	@Kroll.method
	fun registerForPushNotifications(fcmToken: String) {
		Freshchat.getInstance(TiApplication.getInstance()).setPushRegistrationToken(fcmToken);
	}
}
